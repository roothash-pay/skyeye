# SkyEye应用默认配置
# 这是一个YAML格式的文件，用于Helm chart部署

replicaCount: 1

image:
  repository: your-registry/skyeye  # 替换为你的镜像仓库
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets:
  - name: dapplink-sercret
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
   type: NodePort

# 环境变量配置
# 注意: 实际的环境变量将从 .env 文件或 ConfigMap 中读取
env: {}  # 默认为空，部署时从外部注入

# 环境变量来源配置
envFrom:
  # 从ConfigMap读取环境变量 (.env文件内容)
  - configMapRef:
      name: skyeye-env-config
  # 从Secret读取敏感环境变量
  - secretRef:
      name: skyeye-secrets

ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
    nodePort: 30012
ingress:
  enabled: false
  className: ""
  annotations: { }
    # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: [ ]
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local


resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  limits:
    cpu: 300m
    memory: 450Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

# 健康检查配置
livenessProbe:
  httpGet:
    path: /
    port: 8000
  initialDelaySeconds: 60
  periodSeconds: 30
readinessProbe:
  httpGet:
    path: /
    port: 8000
  initialDelaySeconds: 30
  periodSeconds: 10

# Celery配置
celery:
  enabled: true
  worker:
    replicas: 2
    concurrency: 4
    resources:
      limits:
        cpu: 300m
        memory: 512Mi
      requests:
        cpu: 100m
        memory: 256Mi
  beat:
    resources:
      limits:
        cpu: 100m
        memory: 256Mi
      requests:
        cpu: 50m
        memory: 128Mi

# 数据种子配置
dataSeed:
  enabled: false  # 默认关闭，部署时通过--set启用
  minAssetCount: 1000
  # configMapName: "skyeye-seed-data"  # 部署时动态设置
  # fileName: "skyeye_production_seed.sql"  # 部署时动态设置
