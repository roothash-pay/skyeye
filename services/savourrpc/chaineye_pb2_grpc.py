# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from services.savourrpc import chaineye_pb2 as dapplink_dot_chaineye__pb2

GRPC_GENERATED_VERSION = '1.70.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in dapplink/chaineye_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ChaineyeServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getArticleCat = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/getArticleCat',
                request_serializer=dapplink_dot_chaineye__pb2.ArticleCatReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.ArticleCatRep.FromString,
                _registered_method=True)
        self.getArticleList = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/getArticleList',
                request_serializer=dapplink_dot_chaineye__pb2.ArticleListReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.ArticleListRep.FromString,
                _registered_method=True)
        self.getArticleDetail = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/getArticleDetail',
                request_serializer=dapplink_dot_chaineye__pb2.ArticleDetailReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.ArticleDetailRep.FromString,
                _registered_method=True)
        self.getCommentList = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/getCommentList',
                request_serializer=dapplink_dot_chaineye__pb2.CommentListReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.CommentListRep.FromString,
                _registered_method=True)
        self.getLikeAddress = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/getLikeAddress',
                request_serializer=dapplink_dot_chaineye__pb2.AddressReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.AddressRep.FromString,
                _registered_method=True)
        self.likeArticle = channel.unary_unary(
                '/dapplink.chaineye.ChaineyeService/likeArticle',
                request_serializer=dapplink_dot_chaineye__pb2.LikeReq.SerializeToString,
                response_deserializer=dapplink_dot_chaineye__pb2.LikeRep.FromString,
                _registered_method=True)


class ChaineyeServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getArticleCat(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getArticleList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getArticleDetail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCommentList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getLikeAddress(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def likeArticle(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChaineyeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getArticleCat': grpc.unary_unary_rpc_method_handler(
                    servicer.getArticleCat,
                    request_deserializer=dapplink_dot_chaineye__pb2.ArticleCatReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.ArticleCatRep.SerializeToString,
            ),
            'getArticleList': grpc.unary_unary_rpc_method_handler(
                    servicer.getArticleList,
                    request_deserializer=dapplink_dot_chaineye__pb2.ArticleListReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.ArticleListRep.SerializeToString,
            ),
            'getArticleDetail': grpc.unary_unary_rpc_method_handler(
                    servicer.getArticleDetail,
                    request_deserializer=dapplink_dot_chaineye__pb2.ArticleDetailReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.ArticleDetailRep.SerializeToString,
            ),
            'getCommentList': grpc.unary_unary_rpc_method_handler(
                    servicer.getCommentList,
                    request_deserializer=dapplink_dot_chaineye__pb2.CommentListReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.CommentListRep.SerializeToString,
            ),
            'getLikeAddress': grpc.unary_unary_rpc_method_handler(
                    servicer.getLikeAddress,
                    request_deserializer=dapplink_dot_chaineye__pb2.AddressReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.AddressRep.SerializeToString,
            ),
            'likeArticle': grpc.unary_unary_rpc_method_handler(
                    servicer.likeArticle,
                    request_deserializer=dapplink_dot_chaineye__pb2.LikeReq.FromString,
                    response_serializer=dapplink_dot_chaineye__pb2.LikeRep.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dapplink.chaineye.ChaineyeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('dapplink.chaineye.ChaineyeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChaineyeService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getArticleCat(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/getArticleCat',
            dapplink_dot_chaineye__pb2.ArticleCatReq.SerializeToString,
            dapplink_dot_chaineye__pb2.ArticleCatRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getArticleList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/getArticleList',
            dapplink_dot_chaineye__pb2.ArticleListReq.SerializeToString,
            dapplink_dot_chaineye__pb2.ArticleListRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getArticleDetail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/getArticleDetail',
            dapplink_dot_chaineye__pb2.ArticleDetailReq.SerializeToString,
            dapplink_dot_chaineye__pb2.ArticleDetailRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getCommentList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/getCommentList',
            dapplink_dot_chaineye__pb2.CommentListReq.SerializeToString,
            dapplink_dot_chaineye__pb2.CommentListRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def getLikeAddress(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/getLikeAddress',
            dapplink_dot_chaineye__pb2.AddressReq.SerializeToString,
            dapplink_dot_chaineye__pb2.AddressRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def likeArticle(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/dapplink.chaineye.ChaineyeService/likeArticle',
            dapplink_dot_chaineye__pb2.LikeReq.SerializeToString,
            dapplink_dot_chaineye__pb2.LikeRep.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
